package com.cubepro.roll;

import com.cubepro.roll.PermissionTypeEnum;

import java.util.HashSet;
import java.util.Set;


/**
 * Permission generated by MyEclipse - Hibernate Tools
 */

public class Permission  implements java.io.Serializable {

	private static final long serialVersionUID = 5344495745602594780L;
	// Fields    
	private Long permissionId;
	private String internalName;
	private String description;
	private Boolean hidden;
	private Byte type;
	private Set<RolePermission> rolePermissions = new HashSet<RolePermission>(0);

    // Constructors

    /** default constructor */
    public Permission() {
    }

	/** minimal constructor */
    public Permission(String internalName, String description) {
        this.internalName = internalName;
        this.description = description;
    }
    
    /** full constructor */
    public Permission(String internalName, String description, Set<RolePermission> rolePermissions) {
        this.internalName = internalName;
        this.description = description;
        this.rolePermissions = rolePermissions;
    }

   
    // Property accessors

    public Long getPermissionId() {
        return this.permissionId;
    }
    
    public void setPermissionId(Long permissionId) {
        this.permissionId = permissionId;
    }

    public String getInternalName() {
        return this.internalName;
    }
    
    public void setInternalName(String internalName) {
        this.internalName = internalName;
    }

    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    public Set<RolePermission> getRolePermissions() {
        return this.rolePermissions;
    }
    
    public void setRolePermissions(Set<RolePermission> rolePermissions) {
        this.rolePermissions = rolePermissions;
    }

	public Boolean getHidden() {
		return hidden;
	}

	public void setHidden(Boolean hidden) {
		this.hidden = hidden;
	}

	public Byte getType() {
		return type;
	}

	public void setType(Byte type) {
		this.type = type;
	}

	public Boolean getCreate() {
		
		// AND operation on create and type value to check whether
		// create operation is allowed to this permission
		// the true and false or sent in a reverse order to make the
		// check box disable in UI 
		int status = this.type & PermissionTypeEnum.CREATE.getCode();
		if (status == PermissionTypeEnum.CREATE.getCode()) {
			return false;
		}
		return true;
	}

	public Boolean getRead() {
		
		// AND operation on read and type value to check whether
		// read operation is allowed to this permission
		// the true and false or sent in a reverse order to make the
		// check box disable in UI 		
		int status = this.type & PermissionTypeEnum.READ.getCode();
		if (status == PermissionTypeEnum.READ.getCode()) {
			return false;
		}
		return true;

	}

	public Boolean getUpdate() {
		
		// AND operation on update and type value to check whether
		// update operation is allowed to this permission
		// the true and false or sent in a reverse order to make the
		// check box disable in UI 		
		int status = this.type & PermissionTypeEnum.UPDATE.getCode();
		if (status == PermissionTypeEnum.UPDATE.getCode()) {
			return false;
		}
		return true;

	}

	public Boolean getDelete() {
		
		// AND operation on delete and type value to check whether
		// delete operation is allowed to this permission
		// the true and false or sent in a reverse order to make the
		// check box disable in UI 		
		int status = this.type & PermissionTypeEnum.DELETE.getCode();
		if (status == PermissionTypeEnum.DELETE.getCode()) {
			return false;
		}
		return true;

	}

	public Boolean getAllow() {
		
		// AND operation on allow and type value to check whether
		// allow operation is allowed to this permission
		int status = this.type & PermissionTypeEnum.ALLOW.getCode();
		if (status == PermissionTypeEnum.ALLOW.getCode()) {
			return true;
		}
		return false;

	}

}