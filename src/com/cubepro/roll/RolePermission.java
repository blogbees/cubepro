package com.cubepro.roll;

import com.cubepro.roll.PermissionTypeEnum;



/**
 * RolePermission generated by MyEclipse - Hibernate Tools
 */

public class RolePermission  implements java.io.Serializable {

	private static final long serialVersionUID = -4900905033946718101L;
	// Fields
	private RolePermissionId id;
	private Byte value;

    // Constructors

    /** default constructor */
    public RolePermission() {
    }

    
    /** full constructor */
    public RolePermission(Byte value) {
        this.value = value;
    }

   
    // Property accessors

    public RolePermissionId getId() {
        return this.id;
    }
    
    public void setId(RolePermissionId id) {
        this.id = id;
    }

    public Byte getValue() {
        return this.value;
    }
    
    public void setValue(Byte value) {
        this.value = value;
    }
   
    public Boolean getCreate() {
		
		// AND operation on create and type value to check whether
		// create operation is allowed to this permission
		int status = this.value & PermissionTypeEnum.CREATE.getCode();
		if (status == PermissionTypeEnum.CREATE.getCode()) {
			return true;
		}
		return false;
	}

	public Boolean getRead() {
		
		// AND operation on read and type value to check whether
		// read operation is allowed to this permission
		int status = this.value & PermissionTypeEnum.READ.getCode();
		if (status == PermissionTypeEnum.READ.getCode()) {
			return true;
		}
		return false;

	}

	public Boolean getUpdate() {
		
		// AND operation on update and type value to check whether
		// update operation is allowed to this permission
		int status = this.value & PermissionTypeEnum.UPDATE.getCode();
		if (status == PermissionTypeEnum.UPDATE.getCode()) {
			return true;
		}
		return false;

	}

	public Boolean getDelete() {
		
		// AND operation on delete and type value to check whether
		// delete operation is allowed to this permission
		int status = this.value & PermissionTypeEnum.DELETE.getCode();
		if (status == PermissionTypeEnum.DELETE.getCode()) {
			return true;
		}
		return false;

	}

	public Boolean getAllow() {
		
		// AND operation on allow and type value to check whether
		// allow operation is allowed to this permission
		int status = this.value & PermissionTypeEnum.ALLOW.getCode();
		if (status == PermissionTypeEnum.ALLOW.getCode()) {
			return true;
		}
		return false;

	}

}